FL-22-Oct-2015 Created
FL-22-Mar-2016 Changed

hsnmailenbeheer installation

-1- checkout into new directory hsnmailenbeheer:
		$ git clone git@github.com:IISH/hsnmailenbeheer.git
		$ cd hsnmailenbeheer
		$ ls
			client/		client JavaScript hsnmailenbeheer GUI
			doc/		installation docs
			print/		optional directory for PostScript letters
			server/		server Django/Python code
			sql/		db schemas
			static/		client JavaScript Django admin GUI
			README		this file
	
	If /tmp is used for the creation of the letters to be printed, 
	the hsnmailenbeheer/print dir is not used.
	If the hsnmailenbeheer/print dir is used, make sure that the web server
	can read and write there. 
	
	The static/ directory is not in the repository, it can be generated by executing: 
		$ python manage.py collectstatic
	The static dir is needed for the Django admin GUI. 
	User management is done via the admin.
	If the admin GUI is not needed or wanted, it can be turned off by 
	setting ADMIN_ENABLED to False in settings.py
		
	Generate a new SECRET_KEY: 
		$ python -c 'import random; print "".join([random.choice("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)") for i in range(50)])'
		
-2- Documentation
	README
	doc/python2711
		shell script  to activate a locally compiled pythpn-2.7.11
	/requirements.txt
		pip requirements file to install a few additional python modules
	doc/virtual-python-2.7.11.txt
		description to create a virtualenv python-2.7.11

-3- Files not in the repository
	Some files are installation dependent, and have to be created (from sample files). 
	hsnmailenbeheer/server/hsnmailenbeheer/wsgi.py
		Web Server Gateway Interface (WSGI) configuration; 
		use wsgi_sample.py as a template
	hsnmailenbeheer/server/hsnmailenbeheer/settings_local.py
		Django local settings, containing db user/password, etc.; 
		use settings_local_sample.py as a template
	/etc/httpd/conf.d/hsnmailenbeheer.conf
		Apache server configuration file; 
		use hsnmailenbeheer/server/hsnmailenbeheer/hsnmailhsnmailenbeheer_sample.conf as a template
		
-4- Some required linux packages
		cups
		openldap
		openldap-dev[el]
		mysql
		mysql-dev[el]
		zip
		zip-dev[el]

-5- Django
	The Python-based Django framework is used as the basis of the web application. 
	We used the lastest version 1.9.4, which needs at least Python-2.7. See: 
	https://www.djangoproject.com/
	https://media.readthedocs.org/pdf/django/latest/django.pdf
	
	Create Django admin user and tables
		Fill the db
			$ python manage.py makemigrations
			$ python manage.py migrate
		Creating an admin user
			$ python manage.py createsuperuser
		Collect the static files for the admin GUI
			$ python manage.py collectstatic
	Import hsnmailenbeheer table contents
		$ mysql -u [usr] -p [db_name] < [dump_name].sql

-6- Qooxdoo
	The hsnmailenbeheer GUI is made with the JavaScript framework Qooxdoo, see:
	We used the lastest version 5.0.1, its generator needs at least Python-2.6. See:
	http://qooxdoo.org/
	http://manual.qooxdoo.org/current/qooxdoo.pdf
	Download the Qooxdoo-SDK from: 
	http://downloads.sourceforge.net/qooxdoo/qooxdoo-5.0.1-sdk.zip
	and unpack it (somewhere outside the git hsnmailenbeheer tree).
		
	Edit the Qooxdoo SDK path in config.json
	Edit the line #75 in hsnmailenbeheer/client/hsnmailenbeheer/source/class/hsnmailenbeheer/Application.js containing:
		host : "localhost",
	Replace localhost with IP address of your server. 
	Then: 
		$ cd hsn-mailenbeheer/client/hsnmailenbeheer
		$ python generate.py source
		$ python generate.py build

-7- Apache web server
	The client-server connection has the following entry points:
	hsnmailenbeheer/client/hsnmailenbeheer/build/index.html
		the entry point for Apache to retrieve the GUI
	
	hsnmailenbeheer/server/hsnmailenbeheer/wsgi.py
	is the entry point for Apache to execute the Python code; 
	and it activates the python version to be used. 
	In order to be able do this, apache needs the mod_wsgi extension. 
	In order to work, the python version that was used to built mod_wsgi, 
	must be the major version that is used for running the hsnmailenbeheer Django.
	Only the major version number matters, so, e.g. 2.7.6 (mod_wsgi) and 
	2.7.11 (Django) can be mixed, but combining 2.6, 2.7 or 3.5 will fail. 
	
[eof]

